# Generated by Django 5.2.3 on 2025-06-25 04:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tasks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('productivity', 'Productivity'), ('time_management', 'Time Management'), ('goal_setting', 'Goal Setting'), ('work_life_balance', 'Work-Life Balance'), ('motivation', 'Motivation')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('confidence_score', models.FloatField(default=0.0)),
                ('data_period_start', models.DateField()),
                ('data_period_end', models.DateField()),
                ('tasks_analyzed', models.PositiveIntegerField(default=0)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FocusSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveIntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('focus_score', models.PositiveIntegerField(blank=True, null=True)),
                ('interruptions', models.PositiveIntegerField(default=0)),
                ('mood_before', models.CharField(blank=True, max_length=20, null=True)),
                ('mood_after', models.CharField(blank=True, max_length=20, null=True)),
                ('time_of_day', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='focus_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_completion_time', models.PositiveIntegerField()),
                ('predicted_difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=10)),
                ('predicted_success_rate', models.FloatField()),
                ('task_description', models.TextField()),
                ('historical_similar_tasks', models.PositiveIntegerField(default=0)),
                ('user_current_workload', models.PositiveIntegerField(default=0)),
                ('time_of_day', models.PositiveIntegerField()),
                ('day_of_week', models.PositiveIntegerField()),
                ('actual_completion_time', models.PositiveIntegerField(blank=True, null=True)),
                ('actual_completion_status', models.CharField(blank=True, max_length=20, null=True)),
                ('prediction_accuracy', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_predictions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_tasks_created', models.PositiveIntegerField(default=0)),
                ('total_tasks_completed', models.PositiveIntegerField(default=0)),
                ('total_time_spent', models.PositiveIntegerField(default=0)),
                ('average_completion_time', models.FloatField(blank=True, null=True)),
                ('productivity_score', models.FloatField(default=0.0)),
                ('consistency_score', models.FloatField(default=0.0)),
                ('most_productive_hour', models.PositiveIntegerField(blank=True, null=True)),
                ('preferred_task_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('peak_productivity_day', models.CharField(blank=True, max_length=10, null=True)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('last_active_date', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start', models.DateField()),
                ('week_end', models.DateField()),
                ('tasks_completed', models.PositiveIntegerField(default=0)),
                ('tasks_created', models.PositiveIntegerField(default=0)),
                ('total_time_spent', models.PositiveIntegerField(default=0)),
                ('productivity_score', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('ai_insights', models.JSONField(blank=True, default=dict)),
                ('ai_recommendations', models.JSONField(blank=True, default=list)),
                ('average_mood', models.FloatField(blank=True, null=True)),
                ('energy_levels', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-week_start'],
                'unique_together': {('user', 'week_start')},
            },
        ),
    ]
